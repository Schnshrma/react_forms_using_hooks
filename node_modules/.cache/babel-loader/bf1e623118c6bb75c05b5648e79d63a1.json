{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sachin/Documents/react/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; //  ReactDOM.render(<div><h1> Hello World ..!!</h1> <p>paragraph tag </p></div>\n//   ,document.getElementById('root'));\n// 1.\n//alternate method for printing in html file (you don't need to change anywhere)\n// var h1 = document.createElement(\"h1\");\n// h1.innerHTML = \"using pure java script\";\n// var h2 = document.createElement(\"h2\");\n// h2.innerHTML = \"Second element\";\n// h1.append(h2);\n// document.getElementById(\"root\").appendChild(h1);\n// //document.getElementById(\"root\").appendChild(h2);\n// 1 end here\n//2.\n// ReactDOM.render(<div><h1> Hello World ..!!</h1> <p>paragraph tag </p></div>\n//   ,document.getElementById('root'));\n// In case of using multiple tags enclose them in one tag\n// 2 end here\n//3.\n// using array component \n// we need to use , after each tag\n// ReactDOM.render(\n// [  <h1> Hello World ..!!</h1>,<p>paragraph tag </p>,<h2>new h2 tag</h2>\n// ]\n//   ,document.getElementById('root'));\n// 3 ends here\n//4 \n// ReactDOM.render(\n// <React.Fragment>  <h1> Hello World ..!!</h1><p>paragraph tag </p><h2>new h2 tag</h2>\n// </React.Fragment>\n//   ,document.getElementById('root'));\n//now it would't create any new div inside div id=\"root\" which is good\n//CONCLUSION <React.Fragment> 4 IS FASTER AND CONSUME LESS SPACE THAN (2) RATHER USING DIV \n//DIV WILL ADD AN EXTRA LAYER.\n//First Challange \n// ReactDOM.render(\n// <React.Fragment>  \n// <h1> FRIENDS LIST ..!!</h1>\n// <ol type='1'>\n// <li>DKSA</li>\n// <li>SACHIN</li>\n// <li>DEEKSHA</li>\n// <li>DKSU</li>\n// <li>SCHN</li>\n// </ol>\n// </React.Fragment>\n//   ,document.getElementById('root'));\n// 5.vid 10\n//  const name = 'sachin sharma';\n//  ReactDOM.render(<React.Fragment><h1>my name is {name}</h1><h1> 2 + 2 = {2+2}</h1></React.Fragment>,document.getElementById(\"root\"));\n//In case we need to use javascript inside html so we need to use {} and write it inside it.\n//we can write only expression not statement\n//6. \n\nconst fname = \"Sachin\";\nconst lname = \"Sharma\"; //first way to concat\n//ReactDOM.render(<React.Fragment><h1>My name is {fname} {lname}</h1></React.Fragment>,document.getElementById(\"root\"));\n//simple string method we used \"\" because we need space b/w  fname and lname.\n//ReactDOM.render(<React.Fragment><h1>My name is {fname +\" \"+ lname}</h1></React.Fragment>,document.getElementById(\"root\"));\n//this is another method\n//ReactDOM.render(<React.Fragment><h1>My name is {fname} {lname}</h1></React.Fragment>,document.getElementById(\"root\"));\n//now we use templet.\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.Fragment, {\n  children: /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: `My name is ${fname} ${lname}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 33\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 92,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/sachin/Documents/react/my-app/src/index.js"],"names":["React","ReactDOM","fname","lname","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;AAGE;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEC;AACA;AACA;AACA;AACH;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AAEA;AACA;AAGA;;AACA,MAAMC,KAAK,GAAC,QAAZ;AACA,MAAMC,KAAK,GAAC,QAAZ,C,CACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;;AAEAF,QAAQ,CAACG,MAAT,eAAgB,QAAC,KAAD,CAAO,QAAP;AAAA,yBAAgB;AAAA,cAAM,cAAaF,KAAM,IAAGC,KAAM;AAAlC;AAAA;AAAA;AAAA;AAAA;AAAhB;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA2FE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA3F","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n//  ReactDOM.render(<div><h1> Hello World ..!!</h1> <p>paragraph tag </p></div>\n//   ,document.getElementById('root'));\n\n\n  // 1.\n  //alternate method for printing in html file (you don't need to change anywhere)\n\n  // var h1 = document.createElement(\"h1\");\n  // h1.innerHTML = \"using pure java script\";\n  // var h2 = document.createElement(\"h2\");\n  // h2.innerHTML = \"Second element\";\n  // h1.append(h2);\n  // document.getElementById(\"root\").appendChild(h1);\n  // //document.getElementById(\"root\").appendChild(h2);\n  \n  // 1 end here\n\n   //2.\n   // ReactDOM.render(<div><h1> Hello World ..!!</h1> <p>paragraph tag </p></div>\n   //   ,document.getElementById('root'));\n   // In case of using multiple tags enclose them in one tag\n// 2 end here\n\n//3.\n// using array component \n// we need to use , after each tag\n// ReactDOM.render(\n// [  <h1> Hello World ..!!</h1>,<p>paragraph tag </p>,<h2>new h2 tag</h2>\n// ]\n//   ,document.getElementById('root'));\n\n// 3 ends here\n\n//4 \n// ReactDOM.render(\n// <React.Fragment>  <h1> Hello World ..!!</h1><p>paragraph tag </p><h2>new h2 tag</h2>\n// </React.Fragment>\n//   ,document.getElementById('root'));\n//now it would't create any new div inside div id=\"root\" which is good\n\n\n//CONCLUSION <React.Fragment> 4 IS FASTER AND CONSUME LESS SPACE THAN (2) RATHER USING DIV \n//DIV WILL ADD AN EXTRA LAYER.\n\n\n\n\n\n//First Challange \n\n// ReactDOM.render(\n// <React.Fragment>  \n// <h1> FRIENDS LIST ..!!</h1>\n// <ol type='1'>\n// <li>DKSA</li>\n// <li>SACHIN</li>\n// <li>DEEKSHA</li>\n// <li>DKSU</li>\n// <li>SCHN</li>\n// </ol>\n// </React.Fragment>\n//   ,document.getElementById('root'));\n\n\n\n\n// 5.vid 10\n\n//  const name = 'sachin sharma';\n//  ReactDOM.render(<React.Fragment><h1>my name is {name}</h1><h1> 2 + 2 = {2+2}</h1></React.Fragment>,document.getElementById(\"root\"));\n\n//In case we need to use javascript inside html so we need to use {} and write it inside it.\n//we can write only expression not statement\n\n\n//6. \nconst fname=\"Sachin\";\nconst lname=\"Sharma\";\n//first way to concat\n//ReactDOM.render(<React.Fragment><h1>My name is {fname} {lname}</h1></React.Fragment>,document.getElementById(\"root\"));\n\n//simple string method we used \"\" because we need space b/w  fname and lname.\n//ReactDOM.render(<React.Fragment><h1>My name is {fname +\" \"+ lname}</h1></React.Fragment>,document.getElementById(\"root\"));\n\n//this is another method\n//ReactDOM.render(<React.Fragment><h1>My name is {fname} {lname}</h1></React.Fragment>,document.getElementById(\"root\"));\n\n//now we use templet.\n\nReactDOM.render(<React.Fragment><h1>{`My name is ${fname} ${lname}`}</h1></React.Fragment>,document.getElementById(\"root\"));\n\n"]},"metadata":{},"sourceType":"module"}